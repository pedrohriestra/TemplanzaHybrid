@page "/usuarios"
@using TemplanzaHybrid.Models

@inject TemplanzaHybrid.Services.IUsuariosService UsuariosSvc
@inject TemplanzaHybrid.Services.IAuthService Auth
@inject TemplanzaHybrid.Services.IConfirmService Confirm
@inject NavigationManager Nav

@if (!_esAdmin)
{
    <div class="alert alert-info">Redirigiendo…</div>
}
else
{
    <h2 class="titulo-seccion mb-3">Usuarios</h2>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <div class="input-group buscador-usuarios" style="max-width:420px;">
            <span class="input-group-text"><i class="bi bi-search"></i></span>
            <input class="form-control" placeholder="Buscar por nombre o email"
                   @bind="_filtro" @bind:event="oninput" />
            <button class="btn btn-outline-secondary" @onclick="Refrescar">Buscar</button>
        </div>

        @if (Auth.IsInRole(RolUsuario.Admin))
        {
            <button class="btn btn-primary btn-nuevo" @onclick="Nuevo">
                <i class="bi bi-plus-lg me-1"></i>Nuevo usuario
            </button>
        }
    </div>

    @if (_lista is null)
    {
        <p>Cargando...</p>
    }
    else if (_lista.Count == 0)
    {
        <div class="alert alert-info">No hay usuarios para mostrar.</div>
    }
    else
    {
        <div class="row g-4">
            <div class="col-12 col-lg-7">
                <table class="table table-hover align-middle tabla-usuarios">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Imagen</th>
                            <th>Nombre</th>
                            <th>Email</th>
                            <th>Rol</th>
                            <th class="text-end">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var u in _lista)
                    {
                        <tr class="fila-usuario">
                            <td>@u.Id</td>
                            <td class="col-avatar">
                                @if (!string.IsNullOrWhiteSpace(u.ImagenUrl))
                                {
                                    <img src="@u.ImagenUrl" alt="@u.Nombre" class="img-thumbnail avatar-48 object-cover" />
                                }
                            </td>
                            <td>@u.Nombre</td>
                            <td>@u.Email</td>
                            <td>@u.Rol</td>
                            <td class="text-end">
                                <button class="btn btn-sm btn-outline-secondary me-1" @onclick="() => Ver(u)">Ver</button>
                                @if (Auth.IsInRole(RolUsuario.Admin))
                                {
                                    <button class="btn btn-sm btn-outline-primary me-1" @onclick="() => Editar(u.Id)">Editar</button>
                                    <button class="btn btn-sm btn-outline-danger" @onclick="() => Eliminar(u.Id)">Eliminar</button>
                                }
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>

            <div class="col-12 col-lg-5">
                @if (_seleccionado is not null)
                {
                    <div class="card panel-detalle">
                        @if (!string.IsNullOrWhiteSpace(_seleccionado.ImagenUrl))
                        {
                            <img src="@_seleccionado.ImagenUrl" alt="@_seleccionado.Nombre" class="card-img-top avatar-hero object-cover" />
                        }
                        <div class="card-body">
                            <h5 class="card-title mb-1">@_seleccionado.Nombre</h5>
                            <p class="text-muted mb-2">@_seleccionado.Email</p>
                            <span class="badge text-bg-secondary">@_seleccionado.Rol</span>
                        </div>
                    </div>
                }
                else
                {
                    <div class="alert alert-secondary">Seleccioná un usuario para ver el detalle.</div>
                }
            </div>
        </div>
    }
}

@code {
    private bool _esAdmin;
    private List<Usuario>? _lista;
    private Usuario? _seleccionado;
    private string? _filtro;

    protected override async Task OnInitializedAsync()
    {
        _esAdmin = Auth.IsInRole(RolUsuario.Admin);

        if (!_esAdmin)
        {
            // si no es admin, lo mandamos a su perfil
            Nav.NavigateTo("/perfil", replace: true);
            return;
        }

        await Refrescar();
    }

    private async Task Refrescar()
    {
        _lista = (await UsuariosSvc.GetAllAsync(_filtro)).ToList();
        _seleccionado = _lista.FirstOrDefault();
    }

    private void Ver(Usuario u) => _seleccionado = u;
    private void Nuevo() => Nav.NavigateTo("/usuarios/nuevo");
    private void Editar(int id) => Nav.NavigateTo($"/usuarios/editar/{id}");

    private async Task Eliminar(int id)
    {
        if (!await Confirm.ConfirmAsync("¿Eliminar este usuario?")) return;
        if (await UsuariosSvc.DeleteAsync(id)) await Refrescar();
    }
}
